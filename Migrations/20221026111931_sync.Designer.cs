// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Traveler.Models;

#nullable disable

namespace Traveler.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221026111931_sync")]
    partial class sync
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Traveler.Models.Datos.DatosPersonales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GeneroId")
                        .HasColumnType("integer");

                    b.Property<string>("Identificacion")
                        .HasColumnType("text");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("text");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("text");

                    b.Property<int>("TipoDocumentoIdentidadId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.HasIndex("Identificacion")
                        .IsUnique();

                    b.HasIndex("TipoDocumentoIdentidadId");

                    b.ToTable("DatosPersonales");
                });

            modelBuilder.Entity("Traveler.Models.Datos.Ubicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ciudad")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<string>("Pais")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ubicaciones");
                });

            modelBuilder.Entity("Traveler.Models.Organizacion.Organizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<int?>("TipoOrganizacionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TipoOrganizacionId");

                    b.ToTable("Organizaciones");
                });

            modelBuilder.Entity("Traveler.Models.Organizacion.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<bool>("PermisosAdministrador")
                        .HasColumnType("boolean");

                    b.Property<bool>("PermisosOperador")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Traveler.Models.Organizacion.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .HasColumnType("text");

                    b.Property<int>("DatosPersonalesId")
                        .HasColumnType("integer");

                    b.Property<bool>("EsActivo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NombreCompleto")
                        .HasColumnType("text");

                    b.Property<int>("RolId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UltimoAcceso")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("DatosPersonalesId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Traveler.Models.Tipos.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("EsHombre")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsMujer")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsOtro")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("Traveler.Models.Tipos.MedioTransporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("EsAutoParticular")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsAvion")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsBarco")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsBicicleta")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsBus")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsCiudad")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsColectivo")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsLlegada")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsMoto")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsOtro")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsTaxi")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsTren")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MediosTransporte");
                });

            modelBuilder.Entity("Traveler.Models.Tipos.MotivoViaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("EsEstudio")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsOtro")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsTrabajo")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsTurismo")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MotivosViaje");
                });

            modelBuilder.Entity("Traveler.Models.Tipos.TipoDocumentoIdentidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("EsCedulaCiudadania")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsCedulaExtranjeria")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsPasaporte")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsRegistroCivil")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsTarjetaExtranjeria")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsTarjetaIdentidad")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TiposDocumentoIdentidad");
                });

            modelBuilder.Entity("Traveler.Models.Tipos.TipoOrganizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("EsAgencia")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsHostal")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsHotel")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsOtro")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsRestaurante")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TiposOrganizacion");
                });

            modelBuilder.Entity("Traveler.Models.Turista.MedioTransporte.TuristaMedioTransporteCiudad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MedioTransporteId")
                        .HasColumnType("integer");

                    b.Property<int>("TuristaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MedioTransporteId");

                    b.HasIndex("TuristaId", "MedioTransporteId")
                        .IsUnique();

                    b.ToTable("TuristasMediosTransporteCiudad");
                });

            modelBuilder.Entity("Traveler.Models.Turista.MedioTransporte.TuristaMedioTransporteLlegada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MedioTransporteId")
                        .HasColumnType("integer");

                    b.Property<int>("TuristaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MedioTransporteId");

                    b.HasIndex("TuristaId", "MedioTransporteId")
                        .IsUnique();

                    b.ToTable("TuristasMediosTransporteLlegada");
                });

            modelBuilder.Entity("Traveler.Models.Turista.Turista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CantidadPersonasGrupo")
                        .HasColumnType("integer");

                    b.Property<int>("DatosPersonalesId")
                        .HasColumnType("integer");

                    b.Property<int>("DestinoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaLlegada")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("LlegoEnGrupo")
                        .HasColumnType("boolean");

                    b.Property<int>("OrigenId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Presupuesto")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("DatosPersonalesId");

                    b.HasIndex("DestinoId");

                    b.HasIndex("OrigenId");

                    b.ToTable("Turistas");
                });

            modelBuilder.Entity("Traveler.Models.Turista.TuristaEquipamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Detalle")
                        .HasColumnType("text");

                    b.Property<int>("TuristaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TuristaId");

                    b.ToTable("TuristasEquipamiento");
                });

            modelBuilder.Entity("Traveler.Models.Datos.DatosPersonales", b =>
                {
                    b.HasOne("Traveler.Models.Tipos.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Traveler.Models.Tipos.TipoDocumentoIdentidad", "TipoDocumentoIdentidad")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoIdentidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");

                    b.Navigation("TipoDocumentoIdentidad");
                });

            modelBuilder.Entity("Traveler.Models.Organizacion.Organizacion", b =>
                {
                    b.HasOne("Traveler.Models.Tipos.TipoOrganizacion", "TipoOrganizacion")
                        .WithMany()
                        .HasForeignKey("TipoOrganizacionId");

                    b.Navigation("TipoOrganizacion");
                });

            modelBuilder.Entity("Traveler.Models.Organizacion.Usuario", b =>
                {
                    b.HasOne("Traveler.Models.Datos.DatosPersonales", "DatosPersonales")
                        .WithMany()
                        .HasForeignKey("DatosPersonalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Traveler.Models.Organizacion.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatosPersonales");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Traveler.Models.Turista.MedioTransporte.TuristaMedioTransporteCiudad", b =>
                {
                    b.HasOne("Traveler.Models.Tipos.MedioTransporte", "MedioTransporte")
                        .WithMany()
                        .HasForeignKey("MedioTransporteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Traveler.Models.Turista.Turista", "Turista")
                        .WithMany("MediosTransporteCiudad")
                        .HasForeignKey("TuristaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MedioTransporte");

                    b.Navigation("Turista");
                });

            modelBuilder.Entity("Traveler.Models.Turista.MedioTransporte.TuristaMedioTransporteLlegada", b =>
                {
                    b.HasOne("Traveler.Models.Tipos.MedioTransporte", "MedioTransporte")
                        .WithMany()
                        .HasForeignKey("MedioTransporteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Traveler.Models.Turista.Turista", "Turista")
                        .WithMany("MediosTransporteLlegada")
                        .HasForeignKey("TuristaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MedioTransporte");

                    b.Navigation("Turista");
                });

            modelBuilder.Entity("Traveler.Models.Turista.Turista", b =>
                {
                    b.HasOne("Traveler.Models.Datos.DatosPersonales", "DatosPersonales")
                        .WithMany()
                        .HasForeignKey("DatosPersonalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Traveler.Models.Datos.Ubicacion", "Destino")
                        .WithMany()
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Traveler.Models.Datos.Ubicacion", "Origen")
                        .WithMany()
                        .HasForeignKey("OrigenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatosPersonales");

                    b.Navigation("Destino");

                    b.Navigation("Origen");
                });

            modelBuilder.Entity("Traveler.Models.Turista.TuristaEquipamiento", b =>
                {
                    b.HasOne("Traveler.Models.Turista.Turista", "Turista")
                        .WithMany("Equipamiento")
                        .HasForeignKey("TuristaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turista");
                });

            modelBuilder.Entity("Traveler.Models.Turista.Turista", b =>
                {
                    b.Navigation("Equipamiento");

                    b.Navigation("MediosTransporteCiudad");

                    b.Navigation("MediosTransporteLlegada");
                });
#pragma warning restore 612, 618
        }
    }
}
